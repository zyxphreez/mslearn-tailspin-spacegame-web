# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-16.04'
  demands:
  - npm

variables:
  #solution: '**/*.sln'
  #buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.100'

steps:
#- task: NuGetToolInstaller@1

- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs: 
    packageType: sdk
    version: $(dotnetSdkVersion)

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task : gulp@1
  displayName: 'Run Gulp Tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: '$(wwwrootDir)'

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

template:  templates/build.yml
parameters:
  buildConfiguration: 'Debug'

template: templates/build.yml
parameters:
  buildConfiguration: 'Release'


#- task: DotNetCoreCLI@2
#  displayName: 'Build the project - $(buildConfiguration)'
#  inputs:
#    command: 'build'
#    arguments: '--no-restore --configuration $(buildConfiguration)'
#    projects: '**/*.csproj'

#- task: DotNetCoreCLI@2
#  displayName: 'Publish the project - $(buildConfiguration)'
#  inputs:
#    command: 'publish'
#    projects: '**/*.csproj'
#    publishWebProjects: true
#    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
#    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()

#- script: 
#- task: NuGetCommand@2
#  inputs:
#    restoreSolution: '$(solution)'

#- task: VSBuild@1
#  inputs:
#    solution: '$(solution)'
#    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

 #- task: VSTest@2
 # inputs:
 #   platform: '$(buildPlatform)'
 #   configuration: '$(buildConfiguration)'